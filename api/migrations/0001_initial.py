# Generated by Django 4.2.7 on 2025-07-05 12:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='phone number')),
                ('name', models.CharField(max_length=150, verbose_name='first name')),
                ('surname', models.CharField(max_length=150, verbose_name='last name')),
                ('role', models.CharField(choices=[('client', 'Client'), ('journal_manager', 'Journal Manager'), ('accountant', 'Accountant'), ('admin', 'Admin')], default='client', max_length=20)),
                ('language', models.CharField(choices=[('uz', 'Uzbek'), ('ru', 'Russian'), ('en', 'English')], default='en', max_length=2)),
                ('orcidId', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=20)),
                ('submittedDate', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Reviewing'), ('needs_revision', 'Needs Revision'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('published', 'Published')], default='pending', max_length=20)),
                ('viewCount', models.PositiveIntegerField(default=0)),
                ('downloadCount', models.PositiveIntegerField(default=0)),
                ('citationCount', models.PositiveIntegerField(default=0)),
                ('publicationDate', models.DateField(blank=True, null=True)),
                ('submissionTargetDetails', models.CharField(blank=True, max_length=255, null=True)),
                ('title_en', models.CharField(blank=True, max_length=255, null=True)),
                ('abstract_en', models.TextField(blank=True, null=True)),
                ('keywords_en', models.CharField(blank=True, max_length=500, null=True)),
                ('submissionPaymentStatus', models.CharField(choices=[('payment_pending_user_action', 'Payment Pending User Action'), ('payment_pending_admin_approval', 'Payment Pending Admin Approval'), ('payment_approved_processing', 'Payment Approved Processing'), ('results_ready', 'Results Ready')], default='payment_pending_user_action', max_length=50)),
                ('submissionReceiptFile', models.FileField(blank=True, null=True, upload_to='receipts/submission/')),
                ('managerNotes', models.TextField(blank=True, null=True)),
                ('finalVersionFile', models.FileField(blank=True, null=True, upload_to='article_final_versions/')),
                ('submission_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('publication_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('assignedEditor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_articles', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceName', models.CharField(choices=[('AI_Gemini', 'AI Gemini'), ('PlagiarismChecker', 'Plagiarism Checker'), ('DOI_Provider', 'DOI Provider')], max_length=50, unique=True)),
                ('isEnabled', models.BooleanField(default=False)),
                ('apiKey', models.CharField(blank=True, max_length=255)),
                ('monthlyLimit', models.PositiveIntegerField(blank=True, null=True)),
                ('serviceUrl', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='JournalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal_type', models.CharField(choices=[('international', 'International'), ('local', 'Local')], default='local', max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('name_uz', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_en', models.TextField(blank=True, null=True)),
                ('rulesFilePath', models.FileField(blank=True, null=True, upload_to='journal_rules/')),
                ('templateFilePath', models.FileField(blank=True, null=True, upload_to='journal_templates/')),
                ('issn', models.CharField(blank=True, max_length=20, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('submissionChecklistText', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.journalcategory')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_journals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issueNumber', models.CharField(max_length=100)),
                ('publicationDate', models.DateField()),
                ('coverImageUrl', models.URLField(blank=True, null=True)),
                ('compiledIssuePath', models.FileField(blank=True, null=True, upload_to='issues/')),
                ('isPublished', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='api.journal')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actionType', models.CharField(choices=[('USER_LOGIN', 'User Login'), ('USER_CREATED', 'User Created'), ('USER_UPDATED', 'User Updated'), ('USER_DELETED', 'User Deleted'), ('ARTICLE_SUBMITTED', 'Article Submitted'), ('ARTICLE_STATUS_CHANGED', 'Article Status Changed'), ('PAYMENT_APPROVED', 'Payment Approved')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(default=dict)),
                ('targetEntityType', models.CharField(blank=True, max_length=50, null=True)),
                ('targetEntityId', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('versionNumber', models.PositiveIntegerField()),
                ('file', models.FileField(upload_to='article_versions/')),
                ('submittedDate', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='api.article')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-versionNumber'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='api.issue'),
        ),
        migrations.AddField(
            model_name='article',
            name='journal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='api.journal'),
        ),
    ]
